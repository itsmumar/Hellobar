#!/usr/bin/env ruby
puts 'Loading Rails...'
begin
  load File.expand_path('../spring', __FILE__)
rescue LoadError
end
require_relative '../config/boot'
require_relative '../config/environment'
require 'fileutils'

date = ARGV.first
input_log = File.join(Rails.root, 'log', 'queue_worker.log')
output_log = File.join(Rails.root, 'log', "failed_jobs.#{date}.log")
tmp_log = File.join(Rails.root, 'log', "failed_jobs.#{date}.tmp")

# Get just the entries relative to the input date
puts "Searching #{input_log} for #{date}..."
`grep "#{date}" #{input_log} > #{tmp_log}`
puts 'Parsing jobs...'
jobs = {}
File.open(tmp_log, 'r') do |fp|
  loop do
    break unless line = fp.gets
    next unless line =~ /(Received|Processed) message\[(.*?)\]: "(.*)"/
    type, message_id, job = $1, $2, $3
    if type == 'Received'
      # If we received a job add it to the queue
      jobs[message_id] = job
    else
      # if we processed it delete it
      # any not processed will be left in the jobs hash
      jobs.delete(message_id)
    end
  end
end
puts "Found #{jobs.length} failed jobs for #{date}..."
File.open(output_log, 'w') do |fp|
  jobs.each do |_message_id, job|
    fp.puts(job.split('\"').join('"'))
  end
end
FileUtils.rm(tmp_log)
puts "Written results to #{output_log}"
