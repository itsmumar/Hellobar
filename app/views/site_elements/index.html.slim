nav.tabs-wrapper
  a.element-filter href="#active" Active
  a.element-filter href="#paused" Paused
  a.element-filter.active href="#all" All

table.rules-wrapper
  thead
    tr
      th.color-flag
      th Text
      th Age
      th Type
      th Style
      th Views
      th Converstions
      th %
      th 
  tbody
    - @rules.each do |rule|
      tr.rule-block data-rule-id=rule.id
        th.page-header colspan='9'
          h4= rule.name
          span.rule-description= rule.to_sentence

          .dropdown-wrapper
            i.icon-settings
            .dropdown-block
              = link_to "#", class: "edit-rule", "data-rule-id" => rule.id, "data-can-edit" => @site.capabilities.custom_targeted_bars? do
                i.icon-edit
                | Edit

              - unless @rules.count == 1
                = content_tag 'a', class: 'remove-rule' do
                  i.icon-trash
                  = "Delete"
                  - if rule.site_elements.any?
                    = " this and"
                    span= rule.site_elements.size
                    = "bar".pluralize(rule.site_elements.size)

      - rule.site_elements.each do |site_element|
        = render "site_elements/site_element", { :site_element => site_element, :rule => rule }

      tr data-rule-id=rule.id
        td.temporary-block.suggestion-block colspan='9'
          - if rule.site_elements.empty?
            = link_to "Create a bar for this rule", new_site_site_element_path(@site, :anchor => "/settings?rule_id=#{rule.id}"), "data-prompt-upgrade" => @site.capabilities.at_site_element_limit?, "data-upgrade-benefit" => "create more bars"
          - else
            = link_to "A/B test a new bar for this rule to maximize your conversions", new_site_site_element_path(@site, :anchor => "/settings?rule_id=#{rule.id}"), "data-prompt-upgrade" => @site.capabilities.at_site_element_limit?, "data-upgrade-benefit" => "create more bars"

= render 'shared/modals/rule_modal_template'

javascript:
  var rules = #{{@rules.map{|rule| RuleSerializer.new(rule) }.to_json }};
