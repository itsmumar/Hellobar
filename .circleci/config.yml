version: 2
jobs:
  build:
    branches:
      ignore:
        - staging
        - edge
        - production

    docker:
      - image: hellobarcom/base:2.1.9
      - image: mysql
        environment:
          MYSQL_ROOT_PASSWORD: root
    working_directory: /tmp/hellobar_new
    steps:
      - checkout

      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "Gemfile.lock" }}
            - dependency-cache-{{ checksum "editor/bower.json" }}
            - dependency-cache-{{ checksum "editor/yarn.lock" }}
      - run:
          name: Install Ruby Dependencies
          command: bundle install --path vendor/bundle

      - save_cache:
          key: dependency-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Make configs
          command: |
            cp config/settings.yml.example config/settings.yml
            cp .circleci/database.yml config/database.yml

      - run:
          name: Install npm dependencies
          command: cd editor && yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "editor/yarn.lock" }}
          paths:
            - editor/node_modules

      - run:
          name: Install bower dependencies
          command: cd editor && bower install --allow-root

      - save_cache:
          key: dependency-cache-{{ checksum "editor/bower.json" }}
          paths:
            - editor/bower_components

      - run:
          name: Install editor
          command: cd editor && ember build --environment=production

      - run:
          name: Setup DB
          command: RAILS_ENV=test bundle exec rake db:create db:schema:load --trace

      - run:
          name: Run Brakeman
          command: bundle exec brakeman

      - run:
          name: Run Rubocop
          command: bundle exec rubocop

      - run:
          name: Run teaspoon
          command: SUITE=default bundle exec rake teaspoon --trace

      - run:
          name: Run unit tests
          command: bundle exec rspec --tag ~@type:feature -r rspec_junit_formatter --format progress --format RspecJunitFormatter -o $CIRCLE_TEST_REPORTS/rspec/junit.xml

      - run:
          name: Run feature tests
          command: bundle exec rspec -b --tag @type:feature -r rspec_junit_formatter --format progress --format RspecJunitFormatter -o $CIRCLE_TEST_REPORTS/rspec/junit.xml
