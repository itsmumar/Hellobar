version: 2
jobs:
  build:
    branches:
      ignore:
        - staging
        - edge
        - production

    docker:
      - image: hellobarcom/base:2.3.4.3
        environment:
          DISPLAY: :99
          RAILS_ENV: test

      - image: mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: root

    parallelism: 2
    working_directory: /tmp/hellobar_new
    steps:
      - checkout

      - restore_cache:
          keys:
            - bundle-cache-v5-{{ checksum "Gemfile.lock" }}
            - bundle-cache-v4

      - restore_cache:
          keys:
            - bower-cache-v5-{{ checksum "editor/bower.json" }}
            - bower-cache-v4

      - restore_cache:
          keys:
            - yarn-cache-v5-{{ checksum "editor/yarn.lock" }}
            - yarn-cache-v4

      - restore_cache:
          keys:
            - editor-assets-cache-v5-{{ .Revision }}

      - restore_cache:
          keys:
            - tmp-cache-v5-{{ .Branch }}
            - tmp-cache-v4

      - run: env

      - run:
          name: Bundle install
          command: bundle install --path vendor/bundle

      - save_cache:
          key: bundle-cache-v5-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Copy configs
          command: |
            cp .circleci/database.yml config/database.yml
            cp config/secrets.yml.example config/secrets.yml

      - run:
          name: Yarn install
          command: cd editor && yarn install --cache-folder .yarn --frozen-lockfile

      - save_cache:
          key: yarn-cache-v5-{{ checksum "editor/yarn.lock" }}
          paths:
            - editor/node_modules
            - editor/.yarn
            - ~/.config/yarn

      - run:
          name: Bower install
          command: cd editor && bower install --allow-root

      - save_cache:
          key: bower-cache-v5-{{ checksum "editor/bower.json" }}
          paths:
            - editor/bower_components

      - run:
          name: Build Ember application (editor)
          command: if [ -e editor/dist/assets/editor.css ]; then echo "Skip"; else cd editor && ember build --environment=production; fi

      - save_cache:
          key: editor-assets-cache-v5-{{ .Revision }}
          paths:
            - editor/dist/assets

      - run:
          name: Setup database
          command: RAILS_ENV=test bundle exec rake db:create db:schema:load db:migrate --trace

      - run:
          name: Run Brakeman
          command: if [ $CIRCLE_NODE_INDEX = 1 ]; then bundle exec brakeman --no-exit-on-warn --no-exit-on-error; else echo "skip"; fi

      - run:
          name: Run Rubocop
          when: always
          command: if [ $CIRCLE_NODE_INDEX = 0 ]; then bundle exec rubocop; else echo "skip"; fi

      - run:
          name: Run JSHint
          when: always
          command: if [ $CIRCLE_NODE_INDEX = 1 ]; then cd editor && ./node_modules/jshint/bin/jshint app/ && echo "No JSHint errors found."; else echo "skip"; fi

      - run:
          name: Generate modules.js
          when: always
          command: bundle exec rake site:scripts:generate_modules

      - run:
          name: Run unit tests
          when: always
          environment:
            CODECOV_FLAG: unit
          command: |
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | grep -v features | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 -r rspec_junit_formatter --format RspecJunitFormatter --out test-results/rspec.xml --format progress -- ${TESTFILES}

      - run:
          name: Run feature tests
          when: always
          environment:
            CODECOV_FLAG: integration
          command: |
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | grep features | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 -r rspec_junit_formatter --format RspecJunitFormatter --out test-results/rspec.xml --format progress -- ${TESTFILES}

      - save_cache:
          key: tmp-cache-v5-{{ .Branch }}
          paths:
            - /tmp/hellobar_new/tmp/cache
            - /tmp/hellobar_new/tmp/script

      - store_artifacts:
          path: /tmp/hellobar_new/tmp/coverage
          destination: coverage

      - store_artifacts:
          path: /tmp/hellobar_new/tmp/screenshots
          destination: screenshots

      - store_test_results:
          path: /tmp/hellobar_new/test-results
