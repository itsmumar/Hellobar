(function() {
  if (typeof(hellobar) === 'undefined') {

    function defineExternalLibrariesAsModules() {
      hellobar.defineModule('lib.crypto', [], function () {
        {{{crypto_js}}}
        return CryptoJS;
      });

    }

    // Load HelloBar JS Core and Modules
    (function() {
      // Loading core for module management
      var hellobar = {{{core_js}}}

      defineExternalLibrariesAsModules();

      // Loading all HelloBar modules
      {{{modules_js}}}

      // A few helper functions
      function hasCapability(capability) {
        return hellobar('base.capabilities').has(capability);
      }

      function isPreviewMode() {
        return hellobar('base.preview').isActive();
      }

      function scriptIsInstalledProperly() {
        return hellobar('base.selfcheck').scriptIsInstalledProperly();
      }

      // Initialize and configure modules
      hellobar('base.preview', {
        configurator: function(configuration) {
          configuration.previewIsActive({{preview_is_active}});
        }
      });

      hellobar('base.capabilities', {
        configurator: function(configuration) {
          configuration.capabilities({{{capabilities_json}}});
        }
      });

      hellobar('base.site', {
        configurator: function(configuration) {
          configuration.siteId({{site_id}}).siteUrl('{{site_url}}').secret('{{pro_secret}}');
        }
      });

      function initializeProtectedModules() {

        hellobar('base.timezone', {
          configurator: function(configuration) {
            configuration.defaultTimezone('{{site_timezone}}');
          }
        });

        hellobar('base.styling', {
          configurator: function(configuration) {
            configuration.externalCSS({{{hellobar_container_css}}});
          }
        });

        hellobar('base.templating', {
          configurator: function(configuration) {
            {{#templates}}
              configuration.addTemplate("{{name}}", {{{markup}}});
            {{/templates}}

            {{#branding_templates}}
              configuration.addTemplate("{{name}}", {{{markup}}});
            {{/branding_templates}}

            {{#content_upgrade_template}}
              configuration.addTemplate("{{name}}", {{{markup}}});
            {{/content_upgrade_template}}
          }
        });

        hellobar('geolocation', {
          configurator: function(configuration) {
            configuration.geolocationUrl('{{geolocation_url}}');
          }
        });

        !isPreviewMode() && hasCapability('geolocation_injection') && hellobar('geolocation.injection', {
          configurator: function(configuration) {
            configuration.autoRun(true);
          }
        });

        !isPreviewMode() && hellobar('tracking.internal', {
          configurator: function(configuration) {
            configuration.backendHost('{{hb_backend_host}}').siteWriteKey('{{site_write_key}}');
          }
        });

        !isPreviewMode() && hasCapability('external_tracking') && hellobar('tracking.external', {
          configurator: function(configuration) {
            var externalTrackings = {{{external_tracking_json}}};
            configuration.externalTrackings(externalTrackings);
          }
        });

        hellobar('elements.rules', {
          configurator: function(configuration) {
            {{#rules}}
              configuration.addRule('{{match}}', {{{conditions}}}, {{{site_elements}}});
            {{/rules}}
          }
        });

        hellobar('elements', {
          configurator: function(configuration) {
            configuration.elementCSS({{{hellobar_element_css}}});
          }
        });

        hellobar('contentUpgrades', {
          configurator: function(configuration) {
            configuration.contentUpgrades({{{content_upgrades_json}}}).styles({{{content_upgrades_styles_json}}});
          }
        });

        !isPreviewMode() && hasCapability('autofills') && hellobar('autofills', {
          configurator: function(configuration) {
            var autofills = {{{autofills_json}}};
            configuration.autofills(autofills).autoRun(true);
          }
        });
      }

      if(!hellobar('base.environment').isIEXOrLess(8) && {{script_is_installed_properly}}) {
        initializeProtectedModules();
      }
    })();

  } else {
    console.warn('Hello Bar script is already loaded. It seems like you are including the Hello Bar script more than once. Ignoring.');
  }
})();
