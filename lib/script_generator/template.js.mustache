(function() {
  if (typeof(HB) == "undefined") {
    HB_BACKEND_HOST = "{{hb_backend_host}}";

    HB_SITE_ID = {{site_id}};
    HB_SITE_URL = "{{site_url}}";
    HB_WK = "{{site_write_key}}"; // The site's write key
    HB_TZ = "{{site_timezone}}"; // The site's timezone offset in the format "+/-HH:MM"
    HB_PS = "{{pro_secret}}";
    HB_GL_URL = "{{geolocation_url}}";

    // HelloBar JS Modules
    (function() {
      // Loading core for module management
      var hellobar = {{{core_js}}}

      // A few helper functions
      function hasCapability(capability) {
        return hellobar('base.capabilities').has(capability);
      }

      function isPreviewMode() {
        return hasCapability('preview');
      }

      // Loading base modules
      {{{base_storage_js}}}
      {{{base_ajax_js}}}
      {{{base_dom_js}}}
      {{{base_serialization_js}}}

      {{{base_capabilities_js}}}
      hellobar('base.capabilities', {
        configurator: function(configuration) {
          configuration.capabilities({{{capabilities_json}}});
        }
      });

      {{{base_site_js}}}
      hellobar('base.site', {
        configurator: function(configuration) {
          configuration.siteId({{site_id}}).siteUrl('{{site_url}}');
        }
      });

      // Loading geolocation
      {{{geolocation_js}}}
      hellobar('geolocation', {
        configurator: function(configuration) {
          configuration.geolocationUrl('{{geolocation_url}}');
        }
      });
      {{{geolocation_injection_js}}}
      !isPreviewMode() && hasCapability('geolocation_injection') && hellobar('geolocation.injection', {
        configurator: function(configuration) {
          configuration.autoRun(true);
        }
      });

      // Loading bar modules
      // TODO

      // Loading autofills
      {{{autofills_js}}}
      !isPreviewMode() && hasCapability('autofills') && hellobar('autofills', {
        configurator: function(configuration) {
          var autofills = {{{autofills_json}}};
          configuration.autofills(autofills).autoRun(true);
        }
      });
    })();

    {{{ie_shims_js}}}
    {{{jquery_lib}}}
    var jQuerySaved = window.jQuery;
    window.jQuery.noConflict(true);
    var jQuery = jQuerySaved;
    var $ = jQuerySaved;

    (function($) {

      {{{hellobar_base_js}}}
      {{{crypto_js}}}
      {{{site_element_classes_js}}}

      HBInit = function () {
        if (Object.prototype.toString.call( _hbq ) === "[object Array]") {
          HB.CAP = {{{capabilities_json}}};
          // Protect capabilities from being modified
          if ( typeof(Object.defineProperty) != "undefined")
          {
            try{Object.defineProperty(HB, 'CAP', {writable:false, configurable: false});}catch(e){};
            for(var p in HB.CAP)
            {
              try{Object.defineProperty(HB.CAP, p, {writable:false, configurable: false})}catch(e){};
            }
          }

          HB.CONTENT_UPGRADES  = {{{content_upgrades_json}}}
          HB.CONTENT_UPGRADES_STYLES  = {{{content_upgrades_styles_json}}}

          {{#templates}}
            HB.setTemplate("{{name}}", {{{markup}}});
          {{/templates}}

          {{#branding_templates}}
            HB.setBrandingTemplate("{{name}}", {{{markup}}});
          {{/branding_templates}}

          {{#content_upgrade_template}}
            HB.setContentUpgradeTemplate("{{name}}", {{{markup}}});
          {{/content_upgrade_template}}

          HB.addCSS({{{hellobar_element_css}}});
          HB.extCSS = {{{hellobar_container_css}}};
        }
      }

      HBInit();

      {{#rules}}
        _hbq.push(function(){HB.addRule("{{match}}", {{{conditions}}}, {{{site_elements}}})});
      {{/rules}}

      if(!HB.isIEXOrLess(8) && {{script_is_installed_properly}}) {
        _hbq = new HBQ();
      }

    })(jQuery);

  }

})();
